/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.TeamInitiative;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.TeamInitiativeOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InitiativeWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashSet;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Sudeep
 */
public class TeamEventAdminRoleWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TeamEventAdminRoleWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account; 
    private TeamInitiativeOrganization organization; 
    private Enterprise enterprise; 
    private EcoSystem business;
    
    public TeamEventAdminRoleWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, TeamInitiativeOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.account=account;
        this.business=business;
        this.organization = organization;
        valueLabel.setText(organization.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        manageEmployeeJButton = new javax.swing.JButton();
        userJButton = new javax.swing.JButton();
        btnAnalyzeEmpSmiles = new javax.swing.JButton();
        btnEventsPerMonth = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Team Initiative Work Area ");

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        enterpriseLabel.setText("Organization :");

        valueLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        valueLabel.setText("<Name>");

        manageEmployeeJButton.setText("Manage Employee");
        manageEmployeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEmployeeJButtonActionPerformed(evt);
            }
        });

        userJButton.setText("Manage User Account");
        userJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userJButtonActionPerformed(evt);
            }
        });

        btnAnalyzeEmpSmiles.setText("Analyze Employee Events");
        btnAnalyzeEmpSmiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyzeEmpSmilesActionPerformed(evt);
            }
        });

        btnEventsPerMonth.setText("Events Per Month");
        btnEventsPerMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEventsPerMonthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(135, 135, 135)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(255, 255, 255)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(manageEmployeeJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(userJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAnalyzeEmpSmiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEventsPerMonth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(valueLabel)))
                .addContainerGap(193, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valueLabel))
                .addGap(100, 100, 100)
                .addComponent(manageEmployeeJButton)
                .addGap(37, 37, 37)
                .addComponent(userJButton)
                .addGap(28, 28, 28)
                .addComponent(btnAnalyzeEmpSmiles)
                .addGap(31, 31, 31)
                .addComponent(btnEventsPerMonth)
                .addContainerGap(145, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void manageEmployeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEmployeeJButtonActionPerformed

        TeamEventAdminRoleManagePersonJPanel managePersonJPanel = new TeamEventAdminRoleManagePersonJPanel(userProcessContainer,  account,  organization,  enterprise,  business);
        userProcessContainer.add("InitiatorRoleManageEmployeeJPanel", managePersonJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageEmployeeJButtonActionPerformed

    private void userJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userJButtonActionPerformed
        // TODO add your handling code here:
        TeamEventAdminRoleManageUserAccountJPanel muajp = new TeamEventAdminRoleManageUserAccountJPanel( userProcessContainer,  account,  organization,  enterprise,  business);
        userProcessContainer.add("InitiatorRoleManageUserAccountJPanel", muajp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_userJButtonActionPerformed

    private void btnAnalyzeEmpSmilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeEmpSmilesActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset barchartdata=new DefaultCategoryDataset();

        for(UserAccount ua: organization.getUserAccountDirectory().getUserAccountList())
        {
            barchartdata.setValue(ua.getWorkQueue().getWorkRequestList().size(), "No. Of Events", ua.getPerson().getFirstName()+' '+ua.getPerson().getLastName());
        }

        //        barchartdata.setValue(20000, "Amount", "January");
        //        barchartdata.setValue(20000, "Amount", "February");
        //        barchartdata.setValue(20000, "Amount", "March");

        JFreeChart barchart=ChartFactory.createBarChart("Events created by Employees", "Employee", "No. Of Events", barchartdata,  PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot barchrt=barchart.getCategoryPlot();
        barchrt.setRangeGridlinePaint(Color.ORANGE);
        ChartFrame frame= new ChartFrame("Barchart for Events",barchart);
        frame.setVisible(true);
        frame.setSize(650,350);

    }//GEN-LAST:event_btnAnalyzeEmpSmilesActionPerformed

    private void btnEventsPerMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEventsPerMonthActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset linechartdata=new DefaultCategoryDataset();
        
        for(int i=1;i<=12;i++)
        {
            int count=0;
            for(WorkRequest request:organization.getWorkQueue().getWorkRequestList())
            {   System.out.println("Request Month : "+((InitiativeWorkRequest)request).getValidityDate().getMonth());
                if((((InitiativeWorkRequest)request).getValidityDate().getMonth()+1)==i)
                    ++count;
                
                    //System.out.println("N");    
            }
            System.out.println("Events on Month "+i+" "+count);
            linechartdata.setValue(count, "No. Of Events", String.valueOf(i));
        }
        
        
//        linechartdata.setValue(20000, "Amount", "January");
//        linechartdata.setValue(30000, "Amount", "February");
//        linechartdata.setValue(20000, "Amount", "March");
        
        JFreeChart linechart=ChartFactory.createLineChart("Contribution", "Months from January(1) to December(12)", "No. Of Events", linechartdata,  PlotOrientation.VERTICAL,false,true,false);
        CategoryPlot linechrt=linechart.getCategoryPlot();
        linechrt.setRangeGridlinePaint(Color.ORANGE);
        ChartFrame frame= new ChartFrame("Barchart for Events per Month",linechart);
        frame.setVisible(true);
        frame.setSize(450,350);
    }//GEN-LAST:event_btnEventsPerMonthActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyzeEmpSmiles;
    private javax.swing.JButton btnEventsPerMonth;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton manageEmployeeJButton;
    private javax.swing.JButton userJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
